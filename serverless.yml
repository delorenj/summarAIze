org: delorenj
app: summaraize
service: summaraize
frameworkVersion: '3'

package:
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1
  environment:
    OPENAI_API_KEY: ${param:openaiApiKey}
    stripeSecretKey: ${param:stripeSecretKey}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - arn:aws:dynamodb:us-east-1:350692246643:table/dev-books
        - arn:aws:dynamodb:us-east-1:350692246643:table/dev-users
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:ListObjects
      Resource:
        - arn:aws:s3:::summaraize-book/*
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
      Resource:
        - arn:aws:s3:::summaraize-book/*
plugins:
  - serverless-bundle
  - serverless-s3-local
  - serverless-offline
custom:
  stage: ${opt:stage, self:provider.stage}



resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/cognito-authorizer.yml)}
#  - ${file(resources/dynamodb-table.yml)}
#  - ${file(resources/s3.yml)}
#  - ${file(resources/cognito-user-pool.yml)}
#  - ${file(resources/cognito-identity-pool.yml)}

functions:
  testS3:
    handler: test.handler
    events:
      - http:
            path: /test
            method: get
            cors: true
  parseBookMetadata:
    handler: book.parseBookMetadata
    events:
      - http:
          path: /book/metadata
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  getUserData:
    handler: user.getData
    events:
      - http:
          path: /user
          method: get
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer

  summarizeChunk:
    handler: summarize.summarizeChunk
    events:
      - http:
          path: /sc
          method: get
          authorizer: aws_iam

  create:
    handler: create.main
    events:
      - http:
          path: notes
          cors: true
          method: post
          authorizer: aws_iam

  billing:
    handler: billing.main
    events:
      - http:
          path: billing
          cors: true
          method: post
          authorizer: aws_iam
